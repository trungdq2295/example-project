AWS API Gateway
	AWS Lambda + API Gateway: No infrastructure to manage
	Support for the WebSocket Protocol
	Handle API versioning (v1, v2...)
	Handle different environments ( dev, test, prod, ...)
	Handle security (Authentication and authorization)
	Create API keys, handle request throttling
	Swagger/OPen API import to quickly define APIs
	Transform and validate requests and responses
	Generate SDK and API specifications
	Cache API responses

Integration High Level
	Lambda Function
		Invoke Lambda function
		Easy way to expose REST API backed by AWS lambda
	HTTP 
		Export HTTP endpoints in the backend
		Example: internal HTTP API on premise, Application Load Balancer,...
		Why? Add rate limiting, caching, user authentication, API keys, etc...
	AWS Service
		Expose any AWS API through API Gateway
		Example: start an AWS Step Function workflow, post a message to SQS
		Why? add authentication, deploy publicly, rate control

Endpoint Types
	Edge-Optimized (default): For global clients
		Requests are routed through the CloudFront Edge locations ( improves latency)
		The API Gateway still lives in only one region
	Regional
		For client within the same region
		Could manually combine with CloudFront (more control over the caching strategies and the distribution)
	Private:
		Can only be accessed from your VPC using an interface VPC endpoint (ENI)
		Use a resource policy to define access
Security
	User Authentication through
		IAM Roles ( useful for internal applications)
		Cognito (identity for external users - example mobile users, web application users)
		Custom Authorizer (your own logic)
	Custom Domain Name HTTPS security through integration with AWS Certificate Manager ( ACM)
		If using Edge-Optimized endpoint, then the certificate must be in us-east-1
		If using Regional endpoint, the certificate must be in the API Gateway region
		Must setup CNAMe or A-alias record in route53